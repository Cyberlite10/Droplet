esphome:
  name: droplet
  platform: ESP32
  board: esp32dev
  on_boot:
    priority: -100
    then:
      - lambda: id(oled).turn_off();

# Enable logging
logger:



ota:
  password: "bfeaaa234d4fea57e1b5d3b985cfe06c"

wifi:
  ssid: "YOUR_WIFI"
  password: "YOUR_PASSWORD"
  #domain: .lab.lan
  fast_connect: on

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Droplet Fallback Hotspot"
    password: "password"

captive_portal:

dallas:
  - pin: 25
    update_interval: 5s


sn74hc595:
  - id: 'sn74hc595_hub'
    data_pin: 19
    clock_pin: 27
    latch_pin: 2
    oe_pin: 26
    sr_count: 1


i2c:
  sda: 21
  scl: 22
  scan: true

font:
  - file: 'arial.ttf'
    id: font1
    size: 8
  - file: 'arial.ttf'
    id: font2
    size: 10
  - file: 'arial.ttf'
    id: font3
    size: 14

display:
  - platform: ssd1306_i2c
    id: oled
    model: "SSD1306 128x64"
    address: 0x3C
    lambda: |-
      it.printf(2, 0, id(font2), TextAlign::TOP_LEFT, "DROPLET");
      it.printf(61, 0, id(font2) ,"%.1f", id(dbm).state);
      it.line(0, 12, 98, 12);
      it.line(98, 0, 98, 64);
      it.printf(0, 15, id(font3) ,"%.1fÂ°C", id(intergratedtmp).state);
      it.printf(0, 30, id(font3) ,"%.1fH", id(dhthumidity).state);
      it.printf(0, 45, id(font3) ,"%.1fP", id(pressure).state);
      it.printf(102, 0, id(font2) ,"%.1f", id(Soil1).state);
      it.printf(102, 12, id(font2) ,"%.1f", id(Soil2).state);
      it.printf(102, 24, id(font2) ,"%.1f", id(Soil3).state);
      it.printf(102, 36, id(font2) ,"%.1f", id(Soil4).state);
      it.printf(102, 48, id(font2) ,"%.1f", id(Soil5).state);



  # BUZZER #
rtttl:
  output: rtttl_out
  on_finished_playback:
    - logger.log: 'Song ended!'

api:
  services:
    - service: play_rtttl
      variables:
        song_str: string
      then:
        - rtttl.play:
            rtttl: !lambda 'return song_str;'
            
            # https://esphome.io/components/rtttl.html
            # In the developer tools. E.g. for calling rtttl.play select the service droplet_play_rtttl and in service data enter    siren:d=8,o=5,b=100:d,e,d,e,d,e,d,e   or  scale_up:d=32,o=5,b=100:c,c#,d#,e,f#,g#,a#,b  


sensor:

  # MOISTUR LEVEL SENSORS #
  - platform: adc
    pin: 34
    id: "Soil1"
    name: "Droplet SoilM Sens 1"
    icon: "mdi:water-percent"
    update_interval: 2s
    unit_of_measurement: "%"
    attenuation: 11db
    filters:
    - calibrate_linear:
        - 2.520 -> 0.00  # Calibrate Min
        - 0.99 -> 100.00 # Calibrate MAX
    - lambda: |
        if (x < 0) return 0; 
        else if (x > 100) return 100;
        else return (x);
    accuracy_decimals: 0

  - platform: adc
    pin: 35
    id: "Soil2"
    name: "Droplet SoilM Sens 2"
    icon: "mdi:water-percent"
    update_interval: 2s
    unit_of_measurement: "%"
    attenuation: 11db
    filters:
    - calibrate_linear:
        - 2.520 -> 0.00  # Calibrate Min
        - 0.99 -> 100.00 # Calibrate MAX
    - lambda: |
        if (x < 0) return 0; 
        else if (x > 100) return 100;
        else return (x);
    accuracy_decimals: 0

  - platform: adc
    pin: 32
    id: "Soil3"
    name: "Droplet SoilM Sens 3"
    icon: "mdi:water-percent"
    update_interval: 2s
    unit_of_measurement: "%"
    attenuation: 11db
    filters:
    - calibrate_linear:
        - 2.520 -> 0.00  # Calibrate Min
        - 0.99 -> 100.00 # Calibrate MAX
    - lambda: |
        if (x < 0) return 0;
        else if (x > 100) return 100;
        else return (x);
    accuracy_decimals: 0

  - platform: adc
    pin: 33
    id: "Soil4"
    name: "Droplet SoilM Sens 4"
    icon: "mdi:water-percent"
    update_interval: 2s
    unit_of_measurement: "%"
    attenuation: 11db
    filters:
    - calibrate_linear:
        - 2.520 -> 0.00  # Calibrate Min
        - 0.99 -> 100.00 # Calibrate MAX
    - lambda: |
        if (x < 0) return 0;
        else if (x > 100) return 100;
        else return (x);
    accuracy_decimals: 0

  - platform: adc
    pin: 39
    id: "Soil5"
    name: "Droplet SoilM Sens 5"
    icon: "mdi:water-percent"
    update_interval: 2s
    unit_of_measurement: "%"
    attenuation: 11db
    filters:
    - calibrate_linear:
        - 2.520 -> 0.00  # Calibrate Min
        - 0.99 -> 100.00 # Calibrate MAX
    - lambda: |
        if (x < 0) return 0;
        else if (x > 100) return 100;
        else return (x);
    accuracy_decimals: 0



  # HOME ASSISTANT DESIRED MOISTURE LEVELS #
  - platform: homeassistant
    name: "Desired Moisture level 1"
    id: "desired_mois_value_1"
    internal: true
    entity_id: input_number.moisture_level_for_pump1
    
  - platform: homeassistant
    name: "Desired Moisture level 2"
    id: "desired_mois_value_2"
    internal: true
    entity_id: input_number.moisture_level_for_pump2
    
  - platform: homeassistant
    name: "Desired Moisture level 3"
    id: "desired_mois_value_3"
    internal: true
    entity_id: input_number.moisture_level_for_pump3
    
  - platform: homeassistant
    name: "Desired Moisture level 4"
    id: "desired_mois_value_4"
    internal: true
    entity_id: input_number.moisture_level_for_pump4
    
  - platform: homeassistant
    name: "Desired Moisture level 5"
    id: "desired_mois_value_5"
    internal: true
    entity_id: input_number.moisture_level_for_pump5




  # KEEPS MOISTURE LEVEL # Comment out or delete these 5 sensors "Comparison Sens 1,2,3,4,5" if you want to automize the Moisture level with Home Assistant "Automation".
  
  - platform: template
    name: "Comparison Sens1"
    internal: true
    update_interval: 2s # Seconds to pump water then stops pumping and starts comparing sensors data, if needed it will pump again
    lambda: |-
      if (id(Soil1).state < id(desired_mois_value_1).state){
        id(pump1).toggle();
      }else{
        id(pump1).turn_off();
        return {};
      }


  - platform: template
    name: "Comparison Sens2"
    internal: true
    update_interval: 2s # Seconds to pump water then stops pumping and starts comparing sensors data, if needed it will pump again
    lambda: |-
      if (id(Soil2).state < id(desired_mois_value_2).state){
        id(pump2).toggle();
      }else{
        id(pump2).turn_off();
        return {};
      }


  - platform: template
    name: "Comparison Sens3"
    internal: true
    update_interval: 2s # Seconds to pump water then stops pumping and starts comparing sensors data, if needed it will pump again
    lambda: |-
      if (id(Soil3).state < id(desired_mois_value_3).state){
        id(pump3).toggle();
      }else{
        id(pump3).turn_off();
        return {};
      }

  - platform: template
    name: "Comparison Sens4"
    internal: true
    update_interval: 2s # Seconds to pump water then stops pumping and starts comparing sensors data, if needed it will pump again
    lambda: |-
      if (id(Soil4).state < id(desired_mois_value_4).state){
        id(pump4).toggle();
      }else{
        id(pump4).turn_off();
        return {};
      }


  - platform: template
    name: "Comparison Sens5"
    internal: true
    update_interval: 2s # Seconds to pump water then stops pumping and starts comparing sensors data, if needed it will pump again
    lambda: |-
      if (id(Soil5).state < id(desired_mois_value_5).state){
        id(pump5).toggle();
      }else{
        id(pump5).turn_off();
        return {};
      }

  # DHT TMP and HUMIDITY SENSOR  #   Delet if not used
  - platform: dht
    pin: 5
    temperature:
      name: "Droplet DHT Temperature"
      id: "dhttemperature"
    humidity:
      name: "Droplet DHT Humidity"
      id: "dhthumidity"
    update_interval: 5s

  # DISTANCE SENSOR #     # You can measure the height of the plant and plot the growth reight
  - platform: vl53l0x
    name: "Droplet VL53L0x Distance"
    id: "distance"
    address: 0x29
    update_interval: 2s
    long_range: true

  # BMP280 TMP and HUMIDITY SENSOR #   Delet if not used
  - platform: bmp280
    temperature:
      name: "Droplet bmp280 Temperature"
      oversampling: 16x
    pressure:
      name: "Droplet bmp280 Pressure"
      id: "pressure"
    address: 0x76
    update_interval: 5s



  # TMP SENSOR "18b20" Change Adress foy your sensor #
  - platform: dallas
    address: 0xCD062180E9A6F228  
    name: "Droplet Integrated TMP"
    id: "intergratedtmp"


    
  # WIFI #
  - platform: wifi_signal
    name: "Droplet_WiFi_Signal_Sensor"
    id: "dbm"
    update_interval: 5s







switch:

  # PUMPS GPIOs #

  - platform: gpio
    pin: 13
    id: 'pump1'
    name: "Droplet Pump 1"
    icon: "mdi:water-pump"
    restore_mode: ALWAYS_OFF

  - platform: gpio
    pin: 4
    id: 'pump2'
    name: "Droplet Pump 2"
    icon: "mdi:water-pump"
    restore_mode: ALWAYS_OFF
    
  - platform: gpio
    pin: 16
    id: 'pump3'
    name: "Droplet Pump 3"
    icon: "mdi:water-pump"
    restore_mode: ALWAYS_OFF

  - platform: gpio
    pin: 17
    id: 'pump4'
    name: "Droplet Pump 4"
    icon: "mdi:water-pump"
    restore_mode: ALWAYS_OFF

  - platform: gpio
    pin: 18
    id: 'pump5'
    name: "Droplet Pump 5"
    icon: "mdi:water-pump"
    restore_mode: ALWAYS_OFF


  # RELAY GPIOs #

  - platform: gpio
    pin: 19
    id: 'relay1'
    name: "Droplet Relay1"
    inverted: true
    restore_mode: ALWAYS_OFF


  - platform: gpio
    pin: 26
    id: 'relay2'
    name: "Droplet Relay2"
    inverted: true
    restore_mode: ALWAYS_OFF

    
  - platform: gpio
    pin: 2
    id: 'relay3'
    name: "Droplet Relay3"
    inverted: true
    restore_mode: ALWAYS_OFF


  - platform: gpio
    pin: 27
    id: 'relay4'
    name: "Droplet Relay4"
    inverted: true
    restore_mode: ALWAYS_OFF





  # SN74HC595 FOR EXPANSION BOARD #
#  - platform: gpio
#    name: "Droplet Expansion Board Pin #0"
#    pin:
#      sn74hc595: sn74hc595_hub
#      number: 0
#      inverted: false

#  - platform: gpio
#    name: "Droplet Expansion Board Pin #1"
#    pin:
#      sn74hc595: sn74hc595_hub
#      number: 1
#      inverted: false

#  - platform: gpio
#    name: "Droplet Expansion Board Pin #2"
#    pin:
#      sn74hc595: sn74hc595_hub
#      number: 2
#      inverted: false

#  - platform: gpio
#    name: "Droplet Expansion Board Pin #3"
#    pin:
#      sn74hc595: sn74hc595_hub
#      number: 3
#      inverted: false

#  - platform: gpio
#    name: "Droplet Expansion Board Pin #4"
#    pin:
#      sn74hc595: sn74hc595_hub
#      number: 4
#      inverted: false

#  - platform: gpio
#    name: "Droplet Expansion Board Pin #5"
#    pin:
#      sn74hc595: sn74hc595_hub
#      number: 5
#      inverted: false

#  - platform: gpio
#    name: "Droplet Expansion Board Pin #6"
#    pin:
#      sn74hc595: sn74hc595_hub
#      number: 6
#      inverted: false

#  - platform: gpio
#    name: "Droplet Expansion Board Pin #7"
#    pin:
#      sn74hc595: sn74hc595_hub
#      number: 7
#      inverted: false





output:

  # BUZZER #
  - platform: ledc
    pin: GPIO23
    id: rtttl_out





binary_sensor:

  # BUTTON SHORT and LONG PRES AVALIABLE ON HOME ASSISTANT #
  - platform: gpio
    name: "Droplet_Button_Short_Press"
    pin:
      number: 36
      # Short press activates OLED for 20s
    on_press:
      then:
      - lambda: id(oled).turn_on();
      - delay: 20s
      - lambda: id(oled).turn_off();

  - platform: gpio
    pin: 36
    name: "Droplet_Button_Long_Press"
    filters:
      - delayed_on: 1s


